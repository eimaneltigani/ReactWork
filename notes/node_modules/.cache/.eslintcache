[{"/Users/naturalladmin/Desktop/Tech/JavaWork/notes/src/index.js":"1","/Users/naturalladmin/Desktop/Tech/JavaWork/notes/src/components/Board.js":"2","/Users/naturalladmin/Desktop/Tech/JavaWork/notes/src/components/Note.js":"3"},{"size":216,"mtime":1644970930629,"results":"4","hashOfConfig":"5"},{"size":1932,"mtime":1644973859523,"results":"6","hashOfConfig":"5"},{"size":2552,"mtime":1644973418565,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"tsguud",{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"11"},"/Users/naturalladmin/Desktop/Tech/JavaWork/notes/src/index.js",[],[],["19","20"],"/Users/naturalladmin/Desktop/Tech/JavaWork/notes/src/components/Board.js",[],[],"/Users/naturalladmin/Desktop/Tech/JavaWork/notes/src/components/Note.js",["21"],[],"import React, {Component} from 'react';\nimport '../css/Note.css';\nimport PropTypess from 'prop-types';\n\nconst GENERIC_NOTE_TITLE = \"New Note Title\";\nconst GENERIC_NOTE_BODY = \"New Note Body\";\n\nclass Note extends Component {\n    //Probably always have ur contructors take props and call super(props)\n    constructor(props) {\n        super(props); //Inside this Component constructor will set up this.props = props\n        \n        this.titleContent = React.createRef();\n        this.bodyContent = React.createRef();\n\n        this.state = {\n            title: GENERIC_NOTE_TITLE,\n            body: GENERIC_NOTE_BODY,\n            editMode: false\n        };\n    }\n\n    handleEdit() {\n        this.setState({\n            editMode: true\n        });\n    }\n\n    handleSave() {\n        this.setState({\n            title: this.titleContent.current.value,\n            body: this.bodyContent.current.value,\n            editMode: false\n        });\n    }\n\n    handleDelete() {\n        this.props.deleteHandler(this.props.id);\n    }\n\n    render() {\n        let titleElement, bodyElement, buttonArea;\n        if (this.state.editMode) {\n            //display edit mode\n            titleElement = <textarea ref={this.titleContent} className=\"title-textarea\" defaultValue={this.state.title}></textarea>;\n            bodyElement = <textarea ref={this.bodyContent} className=\"body-textarea\" defaultValue={this.state.body}></textarea>;\n            buttonArea = (\n                <div>\n                    <button className=\"btn btn-primary\" onClick={this.handleSave.bind(this)}>Save</button>\n                </div>\n            )\n        } else {\n            //display view mode\n            titleElement = <h5 className=\"card-title\">{this.state.title}</h5>;\n            bodyElement = <p>{this.state.body}</p>;\n            buttonArea = (\n                <div>\n                    <button className=\"btn btn-info\" onClick={this.handleEdit.bind(this)}>Edit</button>\n                    <button className=\"btn btn-danger\" onClick={this.handleDelete.bind(this)}>Delete</button>\n                </div>\n            );\n        }\n        return (\n            <div className=\"col-sm-6\">\n                <div className=\"card card-view\">\n                    <div className=\"card-body\">\n                        {titleElement}\n                        {bodyElement}\n                        {buttonArea}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nNote.defaultProps = {\n    title: \"A cool title\",\n    body: \"A cool body\"\n};\n\n\nexport default Note;",{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":3,"column":8,"nodeType":"28","messageId":"29","endLine":3,"endColumn":18},"no-native-reassign",["30"],"no-negated-in-lhs",["31"],"no-unused-vars","'PropTypess' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]